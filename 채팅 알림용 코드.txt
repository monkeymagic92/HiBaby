/*
	param(ChatChkPARAM)에 loginUser pk값을 박음(mapper에서 to_chk값 찾기위해)
	그리고 ChatChkDMI dmi 값에 dmi.getTo_chk() == 1 이라면
	쪽지가 왔다는 뜻이니까 return result; 값으로 1을 넘겨주고

	JSP ajax에서 res.data == 1이라면 header 부분에 ! 띄워주기
*/





<!-- 로그인한 유저의 메시지 알림 띄우기용 -->
<select id="selChatChk" parameterType="ChatChkPARAM" resultType="ChatChkDMI">
	SELECT to_user, to_chk FROM t_chatChk
	WHERE to_chk = #{to_chk}
</select>

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

/* Mapper */

ChatChkDMI selChatChk(ChatChkPARAM param);

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

/* Service */

public ChatChkDMI selChatChk(ChatChkPARAM param) {
	return mapper.selChatChk(param);
}

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

/* Controller 부분 */

ChatChkPARAM param = new ChatChkPARAM();	// mapper 실행 시키기 위한 객체
ChatChkDMI dmi = new ChatChkDMI();		// mapper 의 return 값을 받기 위한 객체
UserPARAM userParam = (UserPARAM)hs.getAttribute(Const.LOGIN_USER);	// 접속한 유저를 where to_user = #{to_user} 박기위한용 

int result = 0;
int i_pk = userParam.getI_user();

param.setTo_user(i_pk);

dmi = service.selChatChk(param);

if(dmi.getTo_chk() == 1) {
	result = 1;	
} 

return String.valueOf(result);

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

<!-- selChatChk() ajax (챗 알림 띄우기 함수) -->

.then(function(res)) {
	if(res.data == 1) {
		showChatAlert(res)
	} else {
		return;
	}
}


// 채팅 알림 메세지 아이콘 만드는 append 함수
function showChatAlert(res) {
	var showChatSpan = document.createElement('span')
	showChatSpan.setAttribute('class', '구글 아이콘 메세지 모양')
	showChatSpan.setAttribute('id', 'css할 값')

	(Header 대화 목록상단에 css값 준 id값에).append(showChatSpan)
}





