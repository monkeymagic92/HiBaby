<?xml version="1.0" encoding="UTF-8"?>
<!--  mapper 하려면 DOCTYPE에 mapper 부분으로 입력해줘야됨 (마이바티스 xml이랑 비교해서 보기) -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> <!-- 마이바티스 사용하려면 무조건 상단에 박아둬야하는  DOCTYPE-->
<mapper namespace="com.jy.hibaby.user.UserMapper">
		
							<!-- select -->
							
	<!-- n번 회원 상세정보 -->							
	<select id="selUser" parameterType="UserPARAM" resultType="UserDMI"> 
		SELECT i_user, user_id, user_pw, salt, nm, nick, email, myPoint
		,myCash, sm, profile_img, r_dt, m_dt
		FROM t_user
		WHERE <if test="i_user > 0"> i_user = #{i_user}</if>
		<if test="user_id != null and user_id != ''"> user_id = #{user_id}</if>
	</select>
	
	<select id="selUserInfo" parameterType="UserPARAM" resultType="UserPARAM">
		SELECT i_user, user_id, nm, nick, email, myPoint, myCash, sm, profile_img, r_dt, m_dt
		FROM t_user
		WHERE i_user = #{i_user}
	</select>

	<!-- 비밀번호 찾기 -->
	<select id="findPwChk" parameterType="UserPARAM" resultType="UserDMI">
		SELECT i_user, user_id, user_pw, salt, email FROM t_user
		WHERE user_id = #{user_id}
	</select>

	<!-- 아이디 찾기 -->
	<select id="findId" parameterType="UserPARAM" resultType="UserDMI">
		SELECT user_id FROM t_user
		WHERE email = #{email}
	</select>
	
	<!-- 이메일 아작스 -->
	<select id="emailChk" parameterType="UserPARAM" resultType="UserDMI">
		SELECT email FROM t_user		
		WHERE email = #{email}
	</select>
	
	<!-- 닉네임 중복체크 (ajax) -->
	<select id="nickChk" parameterType="UserPARAM" resultType="UserDMI">
		SELECT nick FROM t_user		
		WHERE nick = #{nick}
	</select>
	
	
	<select id="selDetailUser" parameterType="UserPARAM" resultType="UserDMI"> 
		SELECT i_user, user_id, user_pw, salt, nm, nick, email, myPoint
		,myCash, sm, profile_img, r_dt, m_dt
		FROM t_user
		WHERE <if test="i_user > 0"> i_user = #{i_user}</if>
	</select>
	
	
	<select id="selPointMall" parameterType="UserPARAM" resultType="PointVO">
		SELECT A.i_point, A.myPoint, A.myCash, A.myPointNow, A.i_point, A.i_user,
        B.i_user, B.nick, A.r_dt FROM t_myPoint A
		LEFT JOIN t_user B
		ON A.i_user = B.i_user
		WHERE A.i_user = #{i_user}
	</select>
	
	

						<!-- insert -->
						 
	<!-- 회원가입 -->
	<insert id="joinUser" parameterType="UserVO">
		INSERT INTO t_user
		(user_id, user_pw, salt, nm, nick, uNum, email)
		VALUES
		(#{user_id}, #{user_pw}, #{salt}, #{nm}, #{nick}, #{uNum}, #{email})
	</insert>
	
	<!-- 포인트 내역 저장 -->
	<insert id="insMyPointPage" parameterType="PointVO">
		INSERT INTO t_myPoint
		(i_user, myPoint, myCash, myPointNow)
		VALUES
		(#{i_user}, #{myPoint}, #{myCash}, #{myPointNow})
	</insert>		
	
	
	
						<!-- update -->
						
	<update id="updMyPoint" parameterType="UserPARAM">
		UPDATE t_user
		SET myPoint = #{myPoint},
		myCash = #{myCash}
		WHERE i_user = #{i_user}
	</update>
		
	<!-- 비밀번호 변경 -->							
	<update id="changePw" parameterType="UserVO">
		UPDATE t_user
		SET user_pw = #{user_pw}
		,salt = #{salt}
		WHERE i_user = #{i_user}
	</update>
	
	<!-- 프로필 사진 수정 / 등록 -->
	<update id="insProfile_img" parameterType="UserVO">
		UPDATE t_user
		SET profile_img = #{profile_img}
		WHERE i_user = #{i_user}
	</update>
	
	<update id="delImg" parameterType="int">
		UPDATE t_user
		SET profile_img = NULL
		WHERE i_user = #{i_user}
	</update>
	
	<!-- 유저 회원정보 변경 -->	
	<update id="userInfoChange" parameterType="UserPARAM">
		UPDATE t_user
		SET nick = #{nick},
		email = #{email},
		sm = #{sm}
		WHERE i_user = #{i_user}
	</update>
	
	
						<!-- delete -->
	
	<delete id="delProfile_img" parameterType="UserPARAM">
		DELETE FROM t_user
		WHERE profile_img = #{profile_img}
	</delete>
		
	
	
	
	
</mapper>